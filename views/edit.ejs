<% layout('/layouts/boilerplate') %>
<link
  href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
  rel="stylesheet"
/>

<style>
  .form-container {
    max-width: 800px;
    margin: 40px auto;
    padding: 30px;
    background: #fff;
    border-radius: 15px;
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);
  }
  .form-title {
    font-size: 28px;
    font-weight: bold;
    margin-bottom: 25px;
    color: #1e293b;
    text-align: center;
  }
  .preview {
    margin-top: 20px;
    text-align: center;
  }
  .preview img {
    max-width: 300px;
    border-radius: 12px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  }
  .form-actions {
    display: flex;
    justify-content: space-between;
    margin-top: 25px;
  }
</style>

<div class="form-container">
  <h1 class="form-title">‚úèÔ∏è Edit Listing</h1>

  <form
    action="/listing/edit/<%= data._id %>"
    method="POST"
    class="row g-3 needs-validation"
    novalidate
  >
    <!-- Title -->
    <div class="col-md-12">
      <label for="title" class="form-label">Listing Title</label>
      <input
        type="text"
        id="title"
        name="title"
        value="<%= data.title %>"
        class="form-control"
        required
      />
      <div class="valid-feedback">‚úÖ Looks good!</div>
      <div class="invalid-feedback">‚ùå Title is required.</div>
    </div>

    <!-- Image -->
    <div class="col-md-12">
      <label for="image" class="form-label">Image URL</label>
      <input
        type="url"
        id="image"
        name="image"
        value="<%= data.image %>"
        class="form-control"
      />
      <div class="valid-feedback">‚úÖ URL looks good!</div>
    </div>

    <!-- Preview -->
    <div class="preview">
      <p>Current Image:</p>
      <img src="<%= data.image %>" alt="<%= data.title %>" />
    </div>

    <!-- Location -->
    <div class="col-md-12">
      <label for="location" class="form-label">Location</label>
      <input
        type="text"
        id="location"
        name="location"
        value="<%= data.location %>"
        class="form-control"
        required
      />
      <div class="valid-feedback">‚úÖ Looks good!</div>
      <div class="invalid-feedback">‚ùå Location is required.</div>
    </div>

    <!-- Country -->
    <div class="col-md-12">
      <label for="country" class="form-label">Country</label>
      <input
        type="text"
        id="country"
        name="country"
        value="<%= data.country %>"
        class="form-control"
        required
      />
      <div class="valid-feedback">‚úÖ Looks good!</div>
      <div class="invalid-feedback">‚ùå Country is required.</div>
    </div>

    <!-- Price -->
    <div class="col-md-12">
      <label for="price" class="form-label">Price (per night)</label>
      <input
        type="number"
        id="price"
        name="price"
        value="<%= data.price %>"
        min="1"
        class="form-control"
        required
      />
      <div class="valid-feedback">‚úÖ Looks good!</div>
      <div class="invalid-feedback">‚ùå Price must be greater than 0.</div>
    </div>

    <!-- Description -->
    <div class="col-md-12">
      <label for="description" class="form-label">Description</label>
      <textarea
        id="description"
        name="description"
        class="form-control"
        required
      >
<%= data.description %></textarea
      >
      <div class="valid-feedback">‚úÖ Looks good!</div>
      <div class="invalid-feedback">‚ùå Description is required.</div>
    </div>

    <!-- Actions -->
    <div class="form-actions">
      <button type="submit" class="btn btn-primary">üíæ Update Listing</button>
      <a href="/listing" class="btn btn-danger">‚ùå Cancel</a>
    </div>
  </form>
</div>

<script>
  (() => {
    'use strict';
    const forms = document.querySelectorAll('.needs-validation');

    Array.from(forms).forEach((form) => {
      // validate on submit
      form.addEventListener(
        'submit',
        (event) => {
          if (!form.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
          }
          form.classList.add('was-validated');
        },
        false
      );

      // live validation
      const inputs = form.querySelectorAll('input, textarea');
      inputs.forEach((input) => {
        input.addEventListener('input', () => {
          if (input.checkValidity()) {
            input.classList.remove('is-invalid');
            input.classList.add('is-valid');
          } else {
            input.classList.remove('is-valid');
            input.classList.add('is-invalid');
          }
        });
      });
    });
  })();
</script>
